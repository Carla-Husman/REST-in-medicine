# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import authentication_pb2 as authentication__pb2


class AuthenticationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterUser = channel.unary_unary(
                '/AuthenticationService/RegisterUser',
                request_serializer=authentication__pb2.RegistrationRequest.SerializeToString,
                response_deserializer=authentication__pb2.RegistrationResponse.FromString,
                )
        self.CreateToken = channel.unary_unary(
                '/AuthenticationService/CreateToken',
                request_serializer=authentication__pb2.AuthenticationRequest.SerializeToString,
                response_deserializer=authentication__pb2.Token.FromString,
                )
        self.VerifyToken = channel.unary_unary(
                '/AuthenticationService/VerifyToken',
                request_serializer=authentication__pb2.Token.SerializeToString,
                response_deserializer=authentication__pb2.BoolValue.FromString,
                )
        self.DestroyToken = channel.unary_unary(
                '/AuthenticationService/DestroyToken',
                request_serializer=authentication__pb2.Token.SerializeToString,
                response_deserializer=authentication__pb2.BoolValue.FromString,
                )
        self.UpdateUser = channel.unary_unary(
                '/AuthenticationService/UpdateUser',
                request_serializer=authentication__pb2.UpdateRequest.SerializeToString,
                response_deserializer=authentication__pb2.UpdateResponse.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/AuthenticationService/DeleteUser',
                request_serializer=authentication__pb2.DeleteRequest.SerializeToString,
                response_deserializer=authentication__pb2.DeleteResponse.FromString,
                )


class AuthenticationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthenticationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=authentication__pb2.RegistrationRequest.FromString,
                    response_serializer=authentication__pb2.RegistrationResponse.SerializeToString,
            ),
            'CreateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateToken,
                    request_deserializer=authentication__pb2.AuthenticationRequest.FromString,
                    response_serializer=authentication__pb2.Token.SerializeToString,
            ),
            'VerifyToken': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyToken,
                    request_deserializer=authentication__pb2.Token.FromString,
                    response_serializer=authentication__pb2.BoolValue.SerializeToString,
            ),
            'DestroyToken': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyToken,
                    request_deserializer=authentication__pb2.Token.FromString,
                    response_serializer=authentication__pb2.BoolValue.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=authentication__pb2.UpdateRequest.FromString,
                    response_serializer=authentication__pb2.UpdateResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=authentication__pb2.DeleteRequest.FromString,
                    response_serializer=authentication__pb2.DeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AuthenticationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthenticationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthenticationService/RegisterUser',
            authentication__pb2.RegistrationRequest.SerializeToString,
            authentication__pb2.RegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthenticationService/CreateToken',
            authentication__pb2.AuthenticationRequest.SerializeToString,
            authentication__pb2.Token.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthenticationService/VerifyToken',
            authentication__pb2.Token.SerializeToString,
            authentication__pb2.BoolValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DestroyToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthenticationService/DestroyToken',
            authentication__pb2.Token.SerializeToString,
            authentication__pb2.BoolValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthenticationService/UpdateUser',
            authentication__pb2.UpdateRequest.SerializeToString,
            authentication__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthenticationService/DeleteUser',
            authentication__pb2.DeleteRequest.SerializeToString,
            authentication__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
